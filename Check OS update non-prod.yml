---
- name: Check OS version and pending updates
  hosts: Non-prod
  become: yes
  tasks:
    - name: Gather OS information
      ansible.builtin.setup:
        gather_subset:
          - 'hardware'
          - 'network'
          - 'virtual'
          - 'facter'
          - 'ohai'
          - 'distribution'
      register: system_info

    - name: Print OS version
      ansible.builtin.debug:
        msg: "OS Version: {{ system_info.ansible_facts['ansible_distribution'] }} {{ system_info.ansible_facts['ansible_distribution_version'] }}"

    # --- Debian/Ubuntu Section ---
    - name: Get list of upgradable packages (Debian/Ubuntu)
      ansible.builtin.shell: apt list --upgradable 2>/dev/null | grep -v 'Listing...'
      when: ansible_facts['os_family'] == "Debian"
      register: apt_upgrades
      ignore_errors: true

    - name: Show list of upgradable packages (Debian/Ubuntu)
      ansible.builtin.debug:
        msg: "{{ apt_upgrades.stdout_lines }}"
      when: ansible_facts['os_family'] == "Debian"

    - name: Count upgradable packages (Debian/Ubuntu)
      ansible.builtin.debug:
        msg: "Total pending updates: {{ apt_upgrades.stdout_lines | length }}"
      when: ansible_facts['os_family'] == "Debian"

    # --- RedHat/CentOS/AlmaLinux Section ---
    - name: Get list of upgradable packages (RedHat/CentOS/AlmaLinux)
      ansible.builtin.shell: dnf check-update || true
      when: ansible_facts['os_family'] == "RedHat"
      register: dnf_upgrades
      ignore_errors: true

    - name: Show list of upgradable packages (RedHat/CentOS/AlmaLinux)
      ansible.builtin.debug:
        msg: "{{ dnf_upgrades.stdout_lines }}"
      when: ansible_facts['os_family'] == "RedHat"

    - name: Count upgradable packages (RedHat/CentOS/AlmaLinux)
      ansible.builtin.debug:
        msg: "Total pending updates: {{ dnf_upgrades.stdout_lines | select('match', '^[a-zA-Z0-9]') | list | length }}"
      when: ansible_facts['os_family'] == "RedHat"
